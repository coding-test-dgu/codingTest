'''
[NOTE]


[인지적단계]

'''

# 가능한 모든 패턴의 회전/대칭 좌표(3개)를 저장
tet=[[(0,1), (0,2), (0,3)], [(1,0), (2,0), (3,0)],  # ㅡ(회전)
     [(0,1), (1,0), (1,1)],                        # ㅁ
     [(1,0), (2,0), (2,1)], [(0,1), (0,2), (1,0)], [(0,1), (1,1), (2,1)], [(0,1), (0,2), (-1,2)],  # L(회전)
     [(0,1), (1,0), (1,-1)], [(0,1), (1,1), (1,2)], [(0,1), (1,0), (2,0)], [(0,1), (0,2), (1,2)],  # ㄴ대칭(회전)
     [(1,0), (1,1), (2,1)], [(0,1), (1,1), (1,2)], [(1,0), (1,1), (2,0)], [(-1,1), (0,1), (0,2)],  # ㄹ(회전)
     [(1,1), (1,0), (2,1)], [(1,0), (2,0), (1,1)], [(1,0), (2,0), (2,1)], [(0,1), (0,2), (1,1)]    # ㅗ(회전)
]

N, M = map(int, input().split())
arr = [list(map(int, input().split())) for _ in range(N)]

ans = 0


def cal(i, j, pos):
    sum = arr[i][j]

    for di, dj in pos:
        ni = i + di
        nj = j + dj

        # 범위 내에 있는지 체크
        if ni>=0 and ni<N and nj>=0 and nj<M:
            sum += arr[ni][nj]
    return sum

for i in range(N):
    for j in range(M):
        for pos in tet:
            ans = max(ans, cal(i,j,pos))


print(ans)


